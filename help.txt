single-filez [url] [output]

Save a page into a single HTML file.

Positionals:
  url     URL or path on the filesystem of the page to save  [string]
  output  Output filename  [string]

Options:
  --help                                        Show help  [boolean]
  --version                                     Show version number  [boolean]
  --back-end                                    Back-end to use  [choices: "jsdom", "puppeteer", "webdriver-chromium", "webdriver-gecko", "puppeteer-firefox", "playwright-firefox", "playwright-chromium", "playwright-webkit"] [default: "puppeteer"]
  --block-audios                                Block audio elements  [boolean] [default: true]
  --block-fonts                                 Block fonts  [boolean]
  --block-images                                Block images  [boolean]
  --block-scripts                               Block scripts  [boolean] [default: true]
  --block-videos                                Block video elements  [boolean] [default: true]
  --block-mixed-content                         Block mixed contents  [boolean] [default: false]
  --browser-server                              Server to connect to (puppeteer only for now)  [string] [default: ""]
  --browser-headless                            Run the browser in headless mode (puppeteer, webdriver-gecko, webdriver-chromium)  [boolean] [default: true]
  --browser-executable-path                     Path to chrome/chromium executable (puppeteer, webdriver-gecko, webdriver-chromium)  [string] [default: ""]
  --browser-width                               Width of the browser viewport in pixels  [number] [default: 1280]
  --browser-height                              Height of the browser viewport in pixels  [number] [default: 720]
  --browser-load-max-time                       Maximum delay of time to wait for page loading in ms (puppeteer, webdriver-gecko, webdriver-chromium)  [number] [default: 60000]
  --browser-wait-delay                          Time to wait before capturing the page in ms  [number] [default: 0]
  --browser-wait-until                          When to consider the page is loaded (puppeteer, webdriver-gecko, webdriver-chromium)  [choices: "networkidle0", "networkidle2", "load", "domcontentloaded"] [default: "networkidle0"]
  --browser-wait-until-fallback                 Retry with the next value of --browser-wait-until when a timeout error is thrown  [boolean] [default: true]
  --browser-debug                               Enable debug mode (puppeteer, webdriver-gecko, webdriver-chromium)  [boolean] [default: false]
  --browser-script                              Path of a script executed in the page (and all the frames) before it is loaded  [array] [default: []]
  --browser-stylesheet                          Path of a stylesheet file inserted into the page (and all the frames) after it is loaded  [array] [default: []]
  --browser-args                                Arguments provided as a JSON array and passed to the browser (puppeteer, webdriver-gecko, webdriver-chromium)  [string] [default: ""]
  --browser-device                              Name of the device to emulate (puppeteer)  [string] [default: ""]
  --browser-start-minimized                     Minimize the browser (puppeteer)  [boolean] [default: false]
  --browser-cookie                              Ordered list of cookie parameters separated by a comma: name,value,domain,path,expires,httpOnly,secure,sameSite,url (puppeteer, webdriver-gecko, webdriver-chromium, jsdom)  [array] [default: []]
  --browser-cookies-file                        Path of the cookies file formatted as a JSON file or a Netscape text file (puppeteer, webdriver-gecko, webdriver-chromium, jsdom)  [string] [default: ""]
  --browser-ignore-insecure-certs               Ignore HTTPs errors  [boolean] [default: false]
  --compress-CSS                                Compress CSS stylesheets  [boolean] [default: false]
  --compress-HTML                               Compress HTML content  [boolean] [default: true]
  --crawl-links                                 Crawl and save pages found via inner links  [boolean] [default: false]
  --crawl-inner-links-only                      Crawl pages found via inner links only if they are hosted on the same domain  [boolean] [default: true]
  --crawl-no-parent                             Crawl pages found via inner links only if their URLs are not parent of the URL to crawl  [boolean]
  --crawl-load-session                          Name of the file of the session to load (previously saved with --crawl-save-session or --crawl-sync-session)  [string]
  --crawl-remove-url-fragment                   Remove URL fragments found in links  [boolean] [default: true]
  --crawl-save-session                          Name of the file where to save the state of the session  [string]
  --crawl-sync-session                          Name of the file where to load and save the state of the session  [string]
  --crawl-max-depth                             Max depth when crawling pages found in internal and external links (0: infinite)  [number] [default: 1]
  --crawl-external-links-max-depth              Max depth when crawling pages found in external links (0: infinite)  [number] [default: 1]
  --crawl-rewrite-rule                          Rewrite rule used to rewrite URLs of crawled pages  [array] [default: []]
  --dump-content                                Dump the content of the processed page in the console ('true' when running in Docker)  [boolean] [default: false]
  --emulate-media-feature                       Emulate a media feature. The syntax is <name>:<value>, e.g. "prefers-color-scheme:dark" (puppeteer)  [array]
  --error-file  [string]
  --filename-template                           Template used to generate the output filename (see help page of the extension for more info)  [string] [default: "{page-title} ({date-iso} {time-locale}).html"]
  --filename-conflict-action                    Action when the filename is conflicting with existing one on the filesystem. The possible values are "uniquify" (default), "overwrite" and "skip"  [string] [default: "uniquify"]
  --filename-replacement-character              The character used for replacing invalid characters in filenames  [string] [default: "_"]
  --filename-max-length                         Specify the maximum length of the filename  [number] [default: 192]
  --filename-max-length-unit                    Specify the unit of the maximum length of the filename ('bytes' or 'chars')  [string] [default: "bytes"]
  --http-header                                 Extra HTTP header (puppeteer, jsdom)  [array] [default: []]
  --http-proxy-server                           Proxy address (puppeteer)  [string] [default: ""]
  --http-proxy-username                         HTTP username (puppeteer)  [string] [default: ""]
  --http-proxy-password                         HTTP password (puppeteer)  [string] [default: ""]
  --include-BOM                                 Include the UTF-8 BOM into the HTML page  [boolean] [default: false]
  --include-infobar                             Include the infobar  [boolean] [default: false]
  --insert-meta-csp                             Include a <meta> tag with a CSP to avoid potential requests to internet when viewing a page  [boolean] [default: true]
  --load-deferred-images                        Load deferred (a.k.a. lazy-loaded) images (puppeteer, webdriver-gecko, webdriver-chromium)  [boolean] [default: true]
  --load-deferred-images-dispatch-scroll-event  Dispatch 'scroll' event when loading deferred images  [boolean] [default: false]
  --load-deferred-images-max-idle-time          Maximum delay of time to wait for deferred images in ms (puppeteer, webdriver-gecko, webdriver-chromium)  [number] [default: 1500]
  --load-deferred-images-keep-zoom-level        Load defrrred images by keeping zoomed out the page  [boolean] [default: false]
  --max-parallel-workers                        Maximum number of browsers launched in parallel when processing a list of URLs (cf --urls-file)  [number] [default: 8]
  --max-resource-size-enabled                   Enable removal of embedded resources exceeding a given size  [boolean] [default: false]
  --max-resource-size                           Maximum size of embedded resources in MB (i.e. images, stylesheets, scripts and iframes)  [number] [default: 10]
  --move-styles-in-head                         Move style elements outside the head element into the head element  [boolean] [default: false]
  --password                                    Password of the zip file  [string] [default: ""]
  --remove-frames                               Remove frames (puppeteer, webdriver-gecko, webdriver-chromium)  [boolean] [default: false]
  --remove-hidden-elements                      Remove HTML elements which are not displayed  [boolean] [default: true]
  --remove-unused-styles                        Remove unused CSS rules and unneeded declarations  [boolean] [default: true]
  --remove-unused-fonts                         Remove unused CSS font rules  [boolean] [default: true]
  --remove-saved-date                           Remove saved date metadata in HTML header  [boolean] [default: false]
  --remove-alternative-fonts                    Remove alternative fonts to the ones displayed  [boolean] [default: true]
  --remove-alternative-medias                   Remove alternative CSS stylesheets  [boolean] [default: true]
  --remove-alternative-images                   Remove images for alternative sizes of screen  [boolean] [default: true]
  --save-original-urls                          Save the original URLS in the embedded contents  [boolean] [default: false]
  --save-raw-page                               Save the original page without interpreting it into the browser (puppeteer, webdriver-gecko, webdriver-chromium)  [boolean] [default: false]
  --urls-file                                   Path to a text file containing a list of URLs (separated by a newline) to save  [string]
  --user-agent                                  User-agent of the browser (puppeteer, webdriver-gecko, webdriver-chromium)  [string]
  --user-script-enabled                         Enable the event API allowing to execute scripts before the page is saved  [boolean] [default: true]
  --web-driver-executable-path                  Path to Selenium WebDriver executable (webdriver-gecko, webdriver-chromium)  [string] [default: ""]
  --self-extracting-archive                     Create a self extracting HTML file  [boolean] [default: true]
  --insert-text-body                            Insert the text of the page into the self-extracting HTML file  [boolean] [default: false]
  --create-root-directory                       Create a root directory based on the timestamp  [boolean] [default: false]
  --output-directory                            Path to where to save files, this path must exist.  [string] [default: ""]
  --accept-headers  [default: {"font":"application/font-woff2;q=1.0,application/font-woff;q=0.9,*/*;q=0.8","image":"image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8","stylesheet":"text/css,*/*;q=0.1","script":"*/*","document":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"}]
